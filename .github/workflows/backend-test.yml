name: Backend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_DB: fraud_detection_test
          POSTGRES_USER: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Generate Prisma client
      run: |
        cd backend
        npx prisma generate
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/fraud_detection_test

    - name: Run database migrations
      run: |
        cd backend
        npx prisma db push --accept-data-loss
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://test:test@localhost:5432/fraud_detection_test

    - name: Run linter
      run: |
        cd backend
        npm run lint

    - name: Run tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://test:test@localhost:5432/fraud_detection_test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage/lcov.info
        flags: backend
        name: backend-coverage 