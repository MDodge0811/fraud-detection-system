services:
  # Test PostgreSQL Database
  test-postgres:
    image: postgres:15-alpine
    container_name: fraud-detection-test-db
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    ports:
      - "5434:5432"
    volumes:
      - ./scripts/init-test-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d test"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Tests
  backend-tests:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: fraud-detection-backend-tests
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://test:test@test-postgres:5432/test
      TEST_DATABASE_URL: postgresql://test:test@test-postgres:5432/test
    depends_on:
      test-postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npx prisma migrate deploy && npx prisma db seed && npm test"

  # Frontend Tests
  frontend-tests:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    container_name: fraud-detection-frontend-tests
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm test

  # Integration Tests (commented out - requires full stack)
  # integration-tests:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.integration
  #   container_name: fraud-detection-integration-tests
  #   environment:
  #     NODE_ENV: test
  #     DATABASE_URL: postgresql://test:test@test-postgres:5432/fraud_detection_test
  #     API_URL: http://backend:3000
  #     FRONTEND_URL: http://frontend:80
  #   depends_on:
  #     - test-postgres
  #     - backend
  #     - frontend
  #   volumes:
  #     - ./tests:/app/tests
  #     - ./coverage:/app/coverage