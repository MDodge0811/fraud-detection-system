generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model alerts {
  alert_id       String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id String?       @db.Uuid
  risk_score     Int
  reason         String
  status         String?       @default("open") @db.VarChar(20)
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  transactions   transactions? @relation(fields: [transaction_id], references: [transaction_id], onDelete: NoAction, onUpdate: NoAction)
  audit_logs     audit_logs[]

  @@index([created_at], map: "idx_alerts_created_at")
}

model audit_logs {
  log_id    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  alert_id  String?   @db.Uuid
  user_id   String?   @db.Uuid
  action    String    @db.VarChar(50)
  details   String?
  timestamp DateTime? @default(now()) @db.Timestamp(6)
  alerts    alerts?   @relation(fields: [alert_id], references: [alert_id], onDelete: NoAction, onUpdate: NoAction)
  users     users?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model devices {
  device_id    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String?        @db.Uuid
  fingerprint  String         @db.VarChar(255)
  last_seen    DateTime?      @default(now()) @db.Timestamp(6)
  users        users?         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  transactions transactions[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model merchants {
  merchant_id  String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @db.VarChar(100)
  category     String?        @db.VarChar(50)
  risk_level   Int?           @default(50)
  transactions transactions[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model risk_signals {
  signal_id      String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id String?       @db.Uuid
  signal_type    String        @db.VarChar(50)
  risk_score     Int
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  transactions   transactions? @relation(fields: [transaction_id], references: [transaction_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model training_data {
  data_id        String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id String?       @db.Uuid
  label          Int
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  features       Json          @default("{}")
  transactions   transactions? @relation(fields: [transaction_id], references: [transaction_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_training_data_created_at")
}

model ml_models {
  model_id   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  model_type String    @db.VarChar(50)
  model_data Json
  version    String    @db.VarChar(20)
  accuracy   Float?
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@index([model_type, created_at], map: "idx_ml_models_type_created")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model transactions {
  transaction_id String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String?         @db.Uuid
  device_id      String?         @db.Uuid
  merchant_id    String?         @db.Uuid
  amount         Decimal         @db.Decimal(15, 2)
  timestamp      DateTime?       @default(now()) @db.Timestamp(6)
  status         String?         @default("pending") @db.VarChar(20)
  alerts         alerts[]
  risk_signals   risk_signals[]
  training_data  training_data[]
  devices        devices?        @relation(fields: [device_id], references: [device_id], onDelete: NoAction, onUpdate: NoAction)
  merchants      merchants?      @relation(fields: [merchant_id], references: [merchant_id], onDelete: NoAction, onUpdate: NoAction)
  users          users?          @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([timestamp], map: "idx_transactions_timestamp")
}

model users {
  user_id      String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @db.VarChar(100)
  email        String         @unique @db.VarChar(100)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  audit_logs   audit_logs[]
  devices      devices[]
  transactions transactions[]
}
